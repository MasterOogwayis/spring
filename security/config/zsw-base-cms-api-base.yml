
spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://192.168.1.12:3306/base_cms_sys?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: root
    driverClassName: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 50
#      max-lifetime: 30000
      idle-timeout: 600000
      connection-timeout: 30000
      register-mbeans: true
#    # 下面为连接池的补充设置，应用到上面所有数据源中
#    # 初始化大小，最小，最大
#    initialSize: 5
#    minIdle: 5
#    maxActive: 50
#    # 配置获取连接等待超时的时间
#    maxWait: 60000
#    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#    timeBetweenEvictionRunsMillis: 60000
#    # 配置一个连接在池中最小生存的时间，单位是毫秒
#    minEvictableIdleTimeMillis: 300000
#    validationQuery: SELECT 1 FROM DUAL
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    # 打开PSCache，并且指定每个连接上PSCache的大小
#    poolPreparedStatements: true
#    maxPoolPreparedStatementPerConnectionSize: 20
#    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#    filters: stat,wall,log4j
#    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#    # 合并多个DruidDataSource的监控数据
#    useGlobalDataSourceStat: true
#    # 超过时间限制是否回收
#    removeAbandoned: true
#    #超时时间；单位为秒。180秒=3分钟
#    removeAbandonedTimeout: 180
#    #关闭abanded连接时输出错误日志
#    logAbandoned: true
#    keepAlive: true
  #JPA Configuration:
  jpa:
    database: MYSQL
    show-sql: true
    generate-ddl: true
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
      ddl-auto: validate
    database-platform: org.hibernate.dialect.MySQLDialect
